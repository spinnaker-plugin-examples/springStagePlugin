import org.yaml.snakeyaml.Yaml

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
  }
}

apply plugin: "io.spinnaker.plugin.service-extension"
apply plugin: "maven-publish"
apply plugin: "kotlin"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-spring"

sourceCompatibility = 11
targetCompatibility = 11

repositories {
  mavenCentral()
  maven {
        url 'https://armory.jfrog.io/armory/gradle-dev-local/'
        credentials {
            username = "${artifactory_user}"
            password = "${artifactory_password}"
        }
    }
}

spinnakerPlugin {
  serviceName = "orca"
  pluginClass = "io.armory.plugin.stage.SpringStagePlugin"
}

dependencies {
  compileOnly(platform("io.spinnaker.orca:orca-bom:${orcaVersion}"))
  compileOnly "io.spinnaker.kork:kork-plugins-spring-api"
  compileOnly "io.spinnaker.orca:orca-api"
  compileOnly "io.spinnaker.orca:orca-core"

  testImplementation(platform("io.spinnaker.orca:orca-bom:${orcaVersion}"))

  testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  testImplementation "io.spinnaker.orca:orca-api"
  testImplementation "io.spinnaker.orca:orca-api-tck"
  testImplementation "io.spinnaker.orca:orca-queue"
  testImplementation "io.spinnaker.kork:kork-plugins-tck"

  testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.2"
  testImplementation "io.strikt:strikt-core:0.31.0"
  testImplementation "dev.minutest:minutest:1.13.0"
  testImplementation "io.mockk:mockk:1.9.3"
  testImplementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.1"
  testImplementation "javax.servlet:javax.servlet-api:4.0.1"

  testRuntime "org.junit.jupiter:junit-jupiter-engine:5.4.0"
  testRuntime "org.junit.platform:junit-platform-launcher:1.4.0"
  testRuntime "org.junit.platform:junit-platform-commons:1.5.2"
}

compileTestKotlin {
  kotlinOptions {
    languageVersion = "1.3"
    jvmTarget = "11"
  }
}

tasks.withType(Test) {
  useJUnitPlatform()
}
